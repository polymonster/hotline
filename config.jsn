{
    tools<windows>: {
        pmfx: "hotline-data/bin/win32/pmfx/pmfx.exe"
        pmfx_dev: "../pmfx-shader/pmfx.py"
    }

    tools_help: {
        pmfx: {
            help_arg: "-help"
        }
    }
    
    tools_update: {
        pmfx: {
            tag_name: latest
            repository: "https://api.github.com/repos/polymonster/pmfx-shader/releases"
            asset_name<windows>: Windows-x64.zip
        }
    }

    // ensure -run always comes last
    post_build_order: [
        "run"
    ]

    hotline: {
        jsn_vars: {
            config_flags: ""
            config: "debug"
        }
        client: {
            type: shell
            commands: [
                "cargo build --manifest-path plugins/Cargo.toml ${config_flags}"
            ]
        }
        plugins: {
            type: shell
            commands: [
                "cargo build ${config_flags}"
            ]
        }
    }

    base: {
        jsn_vars: {
            data_dir: "target/data"
            temp_dir: "target/temp"
            src_data_dir: "hotline-data/src"
        }

        copy_base: {
            type: copy

            files: [
                // copy fonts to data dir
                ["${src_data_dir}/fonts", "${data_dir}/fonts"]

                // default imgui layouts form the client.. todo. move to target
                ["plugins/imgui.ini", "target/debug/imgui.ini"]
                ["plugins/imgui.ini", "target/release/imgui.ini"]

                // default user config for the client
                ["plugins/user_config.json", "target/user_config.json"]
            ]
        }
    }

    win32-data(base): {
        pmfx: {
            args: [
                "-shader_platform hlsl"
                "-shader_version 6_0"
                "-i ${src_data_dir}/shaders/"
                "-o ${data_dir}/shaders"
                "-t ${temp_dir}/shaders"
                "-source"
            ]
        }
    }

    win32-debug(win32-data, hotline): {
        copy: {
            files: [
                // copies the win pix event run time for inserting pix events
                ["hotline-data/bin/win32/WinPixEventRuntime.dll", "target/${config}/WinPixEventRuntime.dll"]
                ["hotline-data/bin/win32/WinPixEventRuntime.dll", "target/${config}/examples/WinPixEventRuntime.dll"]
            ]
        }

        run: {
            explicit: true
            type: shell
            commands: [
                ".\\target\\${config}\\client.exe"
            ]
        }
    }

    win32-release(win32-debug): {
        jsn_vars: {
            config_flags: "--release"
            config: "release"
        }
    }
}