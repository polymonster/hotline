var searchIndex = JSON.parse('{\
"hello_world":{"doc":"","t":[3,11,11,12,11,11,5,12,11,11,11],"n":["Vertex","borrow","borrow_mut","color","from","into","main","position","try_from","try_into","type_id"],"q":["hello_world","","","","","","","","","",""],"d":["","","","","","","","","","",""],"i":[0,1,1,1,1,1,0,1,1,1,1],"f":[null,[[]],[[]],null,[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Vertex"]]},\
"hotline":{"doc":"","t":[0,0,0,0,18,18,3,13,13,13,13,13,13,13,13,13,18,13,4,13,3,4,13,8,16,3,4,13,13,3,3,8,16,4,13,13,8,16,3,13,13,13,13,3,4,13,13,13,13,18,18,13,13,13,13,13,3,13,4,3,3,13,4,8,3,13,13,13,13,13,3,4,4,4,13,13,13,18,13,13,8,16,3,4,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,3,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,8,16,8,13,16,3,8,16,3,13,13,3,13,4,13,18,18,13,13,4,4,3,3,13,8,13,16,13,3,3,3,13,13,4,4,3,13,13,13,13,13,13,3,4,13,8,16,3,8,16,13,13,13,3,4,3,4,3,13,13,13,13,18,13,13,3,13,13,18,13,13,13,13,3,13,18,13,13,13,3,13,13,13,13,12,12,12,12,12,5,5,12,11,11,11,11,12,12,12,10,10,10,10,5,12,12,12,10,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,10,10,10,10,10,10,10,10,10,10,12,12,0,12,10,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,10,10,10,12,12,12,11,11,11,11,10,10,12,11,11,11,11,11,11,12,10,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,10,10,12,12,12,12,12,12,12,12,12,12,11,11,11,11,10,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,12,10,12,12,12,10,12,12,12,12,12,11,11,11,11,12,12,12,10,12,12,12,5,12,12,12,11,11,11,11,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,5,5,12,5,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,12,11,12,11,5,11,11,11,12,5,3,3,5,5,6,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,18,13,8,3,13,13,18,13,13,4,13,13,13,13,13,13,13,18,13,4,13,13,13,18,13,3,4,18,18,8,16,13,13,18,18,13,13,3,3,13,13,13,13,13,13,13,18,13,6,13,4,18,18,13,13,13,18,8,16,3,3,3,13,13,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,10,11,11,11,11,11,12,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,12,11,11,11,11,12,12,11,11,12,12,12,11,11,10,11,11,10,10,10,10,10,10,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,0,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["gfx","image","imgui","os","ALL","ALPHA","AdapterInfo","Add","All","All","Always","And","AndInverted","AndReverse","Anisotropic","BGRA8n","BLUE","Back","BlendFactor","BlendFactor","BlendInfo","BlendOp","Border","Buffer","Buffer","BufferInfo","BufferUsage","Clamp","Clear","ClearColour","ClearDepthStencil","CmdBuf","CmdBuf","ComparisonFunc","Compute","Compute","ComputePipeline","ComputePipeline","ComputePipelineInfo","ConstantBuffer","ConstantBuffer","Copy","CopyInverted","CpuAccessFlags","CullMode","D16n","D24nS8u","D32f","D32fS8X24u","DEBUG","DEPTH_STENCIL","DataSize","Decr","DecrSat","DepthStencil","DepthStencil","DepthStencilInfo","DepthStencilReadOnly","DepthWriteMask","DescriptorBinding","DescriptorLayout","DescriptorLayout","DescriptorType","Device","DeviceInfo","Direct3D12","DstAlpha","DstColour","Equal","Equiv","Error","ErrorType","FillMode","Format","Fragment","Fragment","Front","GREEN","Greater","GreaterEqual","Heap","Heap","HeapInfo","HeapType","Incr","IncrSat","Index","IndexBuffer","InputElementInfo","InputSlotClass","InvBlendFactor","InvDstAlpha","InvDstColour","InvSrc1Alpha","InvSrc1Colour","InvSrcAlpha","InvSrcColour","Invert","Invert","Keep","Less","LessEqual","LineList","LineListAdj","LineStrip","LineStripAdj","Linear","LogicOp","MapError","MapInfo","Max","Metal","Min","Mirror","MirrorOnce","NONE","NONE","NONE","Nand","Never","NoOp","None","Nor","NotEqual","NulError","One","Or","OrInverted","OrReverse","PatchList","PerInstance","PerVertex","Point","PointList","Present","PushConstantInfo","R16f","R16i","R16n","R16u","R32f","R32i","R32u","READ","RED","RENDER_TARGET","RG32f","RG32i","RG32u","RGB32f","RGB32i","RGB32u","RGBA16f","RGBA16i","RGBA16u","RGBA32f","RGBA32i","RGBA32u","RGBA8i","RGBA8n","RGBA8u","RasterInfo","ReadBackData","ReadBackRequest","ReadBackRequest","RenderPass","RenderPass","RenderPass","RenderPassInfo","RenderPipeline","RenderPipeline","RenderPipelineInfo","RenderTarget","RenderTarget","RenderTargetBlendInfo","Replace","ResourceState","RevSubtract","SHADER_RESOURCE","SKIP_OPTIMIZATION","Sampler","Sampler","SamplerAddressMode","SamplerFilter","SamplerInfo","ScissorRect","Set","Shader","Shader","Shader","ShaderCompile","ShaderCompileFlags","ShaderCompileInfo","ShaderInfo","ShaderResource","ShaderResource","ShaderType","ShaderVisibility","Size3","Solid","Src1Alpha","Src1Colour","SrcAlpha","SrcAlphaSat","SrcColour","StencilInfo","StencilOp","Subtract","SwapChain","SwapChain","SwapChainInfo","Texture","Texture","Texture1D","Texture2D","Texture3D","TextureInfo","TextureType","TextureUsage","Topology","TransitionBarrier","TriangleList","TriangleListAdj","TriangleStrip","TriangleStripAdj","UNORDERED_ACCESS","Undefined","Unknown","UnmapInfo","UnorderedAccess","UnorderedAccess","VIDEO_DECODE_TARGET","Vertex","Vertex","Vertex","VertexConstantBuffer","Viewport","Vulkan","WRITE","WebGPU","Wireframe","Wrap","WriteMask","Xor","Zero","Zero","Zero","a","adapter_name","address_u","address_v","address_w","align","align_pow2","aligned_byte_offset","all","all","all","all","alpha_to_coverage_enabled","antialiased_line_enable","array_levels","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_u8_slice","available","b","back_face","begin_event","begin_render_pass","binding_type","bindings","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend_enabled","blend_info","blend_op","blend_op_alpha","block_size_for_format","border_colour","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","buffer","clear_colour","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","comparison","compile_info","complement","complement","complement","complement","conservative_raster_mode","contains","contains","contains","contains","cpu_access","create","create_buffer","create_cmd_buf","create_compute_pipeline","create_heap","create_render_pass","create_render_pipeline","create_shader","create_swap_chain","create_texture","cs","cull_mode","d3d12","data","deallocate","dedicated_system_memory","dedicated_video_memory","default","default","default","default","default","default","default","default","depth","depth","depth_bias","depth_bias_clamp","depth_clip_enable","depth_enabled","depth_fail","depth_func","depth_stencil","depth_stencil_heap_size","depth_stencil_info","depth_write_mask","description","descriptor_layout","descriptor_layout","difference","difference","difference","difference","discard","dispatch","draw_indexed_instanced","draw_instanced","ds_clear","dst_blend","dst_blend_alpha","empty","empty","empty","empty","end_event","end_render_pass","entry_point","eq","eq","eq","eq","eq","eq","error_type","execute","extend","extend","extend","extend","fail","fill_mode","filter","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forced_sample_count","format","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","front_ccw","front_face","fs","func","g","get_adapter_info","get_backbuffer_index","get_backbuffer_index","get_backbuffer_pass","get_backbuffer_pass_mut","get_backbuffer_texture","get_num_buffers","get_shader_heap","get_shader_heap_mut","get_srv_index","get_srv_index","get_uav_index","get_uav_index","hash","hash","hash","hash","hash","heap_type","height","height","independent_blend_enabled","index","initial_state","input_layout","input_slot","input_slot_class","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_complete","is_empty","is_empty","is_empty","is_empty","left","logic_op","logic_op_enabled","map","map","max_aniso","max_depth","max_lod","min_depth","min_lod","mip_levels","mip_lod_bias","msg","multisample_enable","name","ne","ne","ne","ne","new_frame","not","not","not","not","num_buffers","num_descriptors","num_descriptors","num_elements","num_values","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass","pass","patch_index","push_constants","push_constants","r","raster_info","read_back_backbuffer","read_end","read_start","register_space","register_space","register_space","remove","remove","remove","remove","render_target","render_target_heap_size","render_targets","reset","resolve","right","row_pitch","row_pitch_for_format","rt_clear","samples","semantic","set","set","set","set","set_compute_heap","set_compute_pipeline","set_index_buffer","set_marker","set_render_heap","set_render_pipeline","set_scissor_rect","set_vertex_buffer","set_viewport","shader_heap_size","shader_register","shader_register","shader_register","shader_type","shared_system_memory","size","size_for_format","slice_as_u8_slice","slice_pitch","slice_pitch_for_format","slope_scaled_depth_bias","src_blend","src_blend_alpha","state_after","state_before","static_samplers","stencil","stencil_enabled","stencil_read_mask","stencil_write_mask","step_rate","stride","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","subresource","subresource","swap","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target","tex_type","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","toggle","top","topology","transition_barrier","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","unmap","unmap","update","update","usage","usage","visibility","visibility","visibility","vs","wait_for_last_frame","width","width","write_end","write_mask","write_start","x","x","y","y","z","Buffer","CmdBuf","ComputePipeline","Device","Heap","ReadBackRequest","RenderPass","RenderPipeline","Shader","SwapChain","Texture","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","begin_event","begin_render_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","create","create_buffer","create_cmd_buf","create_compute_pipeline","create_heap","create_render_pass","create_render_pipeline","create_shader","create_swap_chain","create_texture","deallocate","dispatch","draw_indexed_instanced","draw_instanced","end_event","end_render_pass","execute","fence_value","from","from","from","from","from","from","from","from","from","from","from","get_adapter_info","get_backbuffer_index","get_backbuffer_index","get_backbuffer_pass","get_backbuffer_pass_mut","get_backbuffer_texture","get_num_buffers","get_shader_heap","get_shader_heap_mut","get_srv_index","get_srv_index","get_uav_index","get_uav_index","into","into","into","into","into","into","into","into","into","into","into","is_complete","map","map","new_frame","push_constants","read_back_backbuffer","reset","resource","row_pitch","set_compute_heap","set_compute_pipeline","set_index_buffer","set_marker","set_render_heap","set_render_pipeline","set_scissor_rect","set_vertex_buffer","set_viewport","size","slice_pitch","swap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transition_barrier","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","unmap","update","update","wait_for_last_frame","ImageData","borrow","borrow_mut","components","data","from","height","into","load_from_file","try_from","try_into","type_id","width","write_to_file","ImGui","ImGuiInfo","ImGuiPlatformIO_Set_Platform_GetWindowPos","ImGuiPlatformIO_Set_Platform_GetWindowSize","WindowSizeCallback","borrow","borrow","borrow_mut","borrow_mut","create","demo","device","drop","fonts","from","from","into","into","main_window","new_frame","render","swap_chain","try_from","try_from","try_into","try_into","type_id","type_id","APP_WINDOW","Alt","App","AppInfo","Arrow","Backspace","CLOSE","Count","Ctrl","Cursor","Delete","Down","End","Enter","Escape","Hand","Home","IMGUI","Insert","Key","KeyPadEnter","Left","Left","MOVE","Middle","MonitorInfo","MouseButton","NONE","NONE","NativeHandle","NativeHandle","None","NotAllowed","OVERLAPPED_WINDOW","POPUP","PageDown","PageUp","Point","Rect","ResizeAll","ResizeEW","ResizeNESW","ResizeNS","ResizeNWSE","Right","Right","SIZE","Shift","Size","Space","SysKey","TOOL_WINDOW","TOPMOST","Tab","TextInput","Up","VISIBLE","Window","Window","WindowEventFlags","WindowInfo","WindowStyleFlags","X1","X2","all","all","as_mut_ptr","as_ptr","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bring_to_front","clear_events","client_rect","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","complement","complement","contains","contains","create","create_window","default","default","default","difference","difference","dpi_aware","dpi_scale","empty","empty","enumerate_display_monitors","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_dpi_scale","get_events","get_key_code","get_keys_down","get_mouse_buttons","get_mouse_client_pos","get_mouse_hwheel","get_mouse_pos","get_mouse_wheel","get_native_handle","get_pos","get_size","get_utf16_input","get_viewport_rect","hash","hash","height","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","is_focused","is_minimised","is_mouse_hovered","is_sys_key_down","name","ne","ne","not","not","num_buffers","parent_handle","partial_cmp","partial_cmp","primary","rect","rect","remove","remove","run","set","set","set_cursor","set_focused","set_pos","set_size","set_title","show","style","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update","update_style","width","win32","window","x","x","y","y","App","NativeHandle","Window","as_mut_ptr","as_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bring_to_front","clear_events","clone","clone","clone","clone_into","clone_into","clone_into","close","create","create_window","drop","drop","enumerate_display_monitors","from","from","from","get_dpi_scale","get_events","get_hwnd","get_key_code","get_keys_down","get_mouse_buttons","get_mouse_client_pos","get_mouse_hwheel","get_mouse_pos","get_mouse_wheel","get_native_handle","get_pos","get_size","get_utf16_input","get_viewport_rect","into","into","into","is_focused","is_minimised","is_mouse_hovered","is_sys_key_down","run","set_cursor","set_focused","set_pos","set_size","set_title","show","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update_style"],"q":["hotline","","","","hotline::gfxhotline::gfx::d3dhotline::image","","","","","","","","","","","","","","hotline::imgui","","","","","","","","","","","","","","","","","","","","","","","","","","","","hotline::oshotline::os::win32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Graphics and compute module.","Image reading/writing module support for (png, jpg, bmp, …","Imgui rendering and platform implementation using imgui_sys","Operating system module.","","","Information returned from <code>Device::get_adapter_info</code>","","","","","","","","","","","","Controls how the source and destination terms in blend …","","Information to control blending operations on render …","Controls how the source and destination terms are …","","An opaque Buffer type used for vertex, index, constant or …","","Information to create a buffer through …","Describes how a buffer will be used on the GPU.","","","Values to clear colour render targets at the start of a …","Values to clear depth stencil buffers during a <code>RenderPass</code>","Responsible for buffering graphics commands. Internally it …","","Used for comparison ops in depth testing, samplers.","","","An opaque compute pipeline type..","","Information to create a compute pipeline through …","Used for cbuffers","","","","CPU Access flags for buffers or textures","Polygon cull mode","","","","","Generates shader with debug info","Used as a depth stencil buffer","","","","","Used for a texture to be used as a depth stencil buffer","Information to control the depth and stencil testing of …","Used for when depth testing is enabled, but depth writes …","Write to the depth buffer, or omit writes and just perform …","Describes a range of resources for access on the GPU.","Descriptor layout is required to create a pipeline it …","","Describes the type of descriptor binding to create.","A GPU device is used to create GPU resources, the device …","Information to create a device, it contains default heaps …","","","","","","Errors passed back from FFI calls to various gfx backends","Error types for different gfx backends and FFI calls","Polygon fillmode","Format for resource types (textures / buffers). n = …","","","","","","","An opaque shader heap type, use to create views of …","","Information to create a desciptor heap… <code>Device</code> will …","Options for heap types","","","","Bindable as an index buffer","Describe a single element of an <code>InputLayoutInfo</code>","Describes the frequency of which elements are fetched from …","","","","","","","","","","","","","","","","","","The logical operation to configure for a render target …","","Info to control mapping of resources for read/write access","","","","","","No flags, default compilation","","Texture will be only used for data storage and not used on …","","","","","","","","","","","","","","","","","Used for swap chain textures only, required before calling …","Describes space in the shader to send data to via …","","","","","","","","","","Used as a colour render target","","","","","","","","","","","","","","","","Information to control the rasterisation mode of …","Results from an issued ReadBackRequest","Used to readback data from the GPU, once the request is …","","An opaque RenderPass containing an optional set of colour …","","","Information to create a render pass","An opaque render pipeline type set blend, depth stencil, …","","Information to create a pipeline through …","","Used for texture only to be written to from fragment …","Blending operations for a single render target","","All possible resource states, some for buffers and some …","","Texture will be sampled in a shader","Skips optimization for easier debuggability, deterministic …","Used for texture samplers","","Address mode for the sampler (controls wrapping and …","Filtering mode for the sampler (controls bilinear and …","Info to create a sampler state object to sample textures …","Structure to specify scissor rect coordinates on a <code>CmdBuf</code>.","","An opaque Shader type","For shader resource view, constant buffer or unordered …","","","Shader compilation flags","Information required to compile a shader from source code.","Information to create a shader through …","Used for textures or structured buffers","Readable from shaders","The stage to which a shader will bind itself.","Describes the visibility of which shader stages can access …","3-Dimensional struct for compute shader thread count / …","","","","","","","Stencil info for various outcomes of the depth stencil test","Stencil operations","","A swap chain is connected to a window, controls fences and …","","Information to pass to <code>Device::create_swap_chain</code>","An opaque Texture type","","","","","Information to create a pipeline through …","Describes the dimension of a texture","Textures can be used in one or more of the following ways","Indicates how the pipeline interprets vertex data at the …","Transitions are required to be performed to switch …","","","","","Used as a read-writable resource in compute shaders","","","Info to control writing of mapped resources","Used for read-write textures","Access for read/write from shaders","Used as a target for hardware assisted video decoding …","","","","Bindable as a vertex or constant buffer for use in shaders","Structure to specify viewport coordinates on a <code>CmdBuf</code>.","","","","","","Render target write mask flags","","","","","","optional adapter to choose a specific adapter in the …","","","","Aligns value to the alignment specified by align. value …","Aligns value to the alignment specified by align. value …","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","Take any sized type and return a u8 slice. This can be …","List of available adapter descriptons","","","","","Type of resources in this descriptor binding","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","Control blending settings for the output merge stage","","","Returns the ‘block size’ (texel, compressed block of …","Colour is rgba8 packed into a u32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","colour for clearing the window when using the backbuffer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional info to compile from source, if this is none then …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Used to indicate if we want to read or write from the CPU, …","","","","","","","","","","","Compute Shader","","Implemets this interface with a Direct3D12 backend.","Slice of data bytes","Deallocate a resource from the heap and mark space in free …","","","","","","","","","","","Clear value for the depth buffer. Use <code>None</code> to preserve …","","","","","Enable depth testing","","","A texture which was created with depth stencil flags","space for depth stencil targets","Control depth test and stencil oprations","Choose to write or not write to the depth buffer","","Layout of shader resources (constant buffers, structured …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","(must also specify None to clear). This can save having to …","Thread count is required for metal, in hlsl it is …","","","Depth value (in view) to clear depth stencil, use None to …","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","The name of the entry point function in the shader to …","","","","","","","","","","","","","","","","Flags to pass to the compiler.","","","","","","","","","","","","","","","","","","","","","","","","","must be BGRA8n, RGBA8n or RGBA16f","","GPU format to interperet the data","Data format of the buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Fragment Shader","","","","","","","","","","","","Return the index to access in a shader","Return the index to access in a shader","Return the index to unorder access view for read/write …","Return the index to unorder access view for read/write …","","","","","","","Height of the viewport rectangle (Y is down).","","Separate blending on colour and alpha channels","","Initial state to start image transition barriers before …","Vertex shader input layout","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","maps the entire buffer for reading or writing… see …","","","Maximum depth of the viewport. Ranges between 0 and 1.","","Minimum depth of the viewport. Ranges between 0 and 1.","","","","","","The chosen adapter a device was created with","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Number of descriptors in this table, use <code>None</code> for unbounded","The number of array elements","Number of 32-bit values to push","","","","","A valid render pass, you can share pipelines across passes …","","only required for Topology::PatchList use 0 as default","","","","Control rasterisation of primitives","","Range end of data we wish to read, for write only access …","Range start of data we wish to read, for write-only access …","Register space to bind to (supplied in shader)","Register space to bind to (supplied in shader)","Register space to bind to (supplied in shader)","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Separate blend operations for each bout render targets","space for colour render targets","Array of textures which have been created with render …","","Choose to resolve multi-sample AA targets,","","Pitch of a row of data","Returns the row pitch of an image in bytes: width * block …","Colour to clear render target when the pass starts, use …","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","space for shader resource views, constant buffers and …","Register index to bind to (supplied in shader)","Register index to bind to (supplied in shader)","Register index to bind to (supplied in shader)","Type of the shader (Vertex, Fragment, Compute, etc…).","","Total size of data (should be == data.len())","Return the size in bytes of a 3 dimensional resource: …","Take any sized silce and convert to a slice of u8","Pitch of a slice (3D texture or array level, cubemap face …","Returns the slice pitch of an image in bytes: width * …","","","","","","","Clear value for the stencil buffer. Use <code>None</code> to preserve …","Enable stencil testing","","","","The stride of a vertex or structure in bytes.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Sub resource to map ie. mip level, cubemap face, array …","Sub resource to map ie. mip level, cubemap face, array …","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The target you wish to compile for, this is paltform …","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","Primitive topolgy oof the input assemblereturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","unmap buffer… see UnmapInfo","","","updates the buffer by mapping and copying memory, if you …","Indicates how the buffer will be used on the GPU.","","The shader stage the resources will be accessible to","The shader stage the constants will be accessible to","The shader stage the sampler will be accessible to","Vertex Shader","","Width of the viewport rectangle.","","Range end of data we have written to the buffer, supply 0 …","","Range start of data we have written to the buffer, supply …","","Top left x coordinate.","","Top left y coordinateumber of components per-pixel (RGBA = 4)","Vector of linear image data tightly packed","","Vertical dimension of the image in texels","","Loads an image from file returning information in the …","","","","Horizontal dimension of the image in texels","Writes a buffer of image data to a file. The type of image …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forces top level window onto the task bar when visible","","An interface which all platforms need to implement for …","Information to describe the Application properties","","","Window was requested to be closed","","","Enums for different mouse cursors","","","","","","","","Signify window is for imgui","","Enums for vitual keys","","","","Window was requested to move","","Information to describe the dimensions of display monitors","Used to index into array returned by app::get_mouse_buttons","No flags","No flags","A native platform window handle that can be passed around …","","","","Overlapped window has a title bar and border","Popup window","","","2-Dimension point for screen coordinates","Describes a rectangle starting at the top left corner …","","","","","","","","Window was requested to resize","","2-Dimension size for window coordinates","","Enums for system key presses","Has a smaller title bar","Placed above all non top most windows","","","","Visible","An instance of an operating system window","","Event flags to query from other systems (such as imgui) to …","Filled out to specify various window parameters when a …","Window style flags to change the window appearance","","","Returns the set containing all flags.","Returns the set containing all flags.","Mut pointer","Const pointer","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Bring window to front and draw ontop of all others","Clears events after they have been responded to","","","","","","","","","","","","","","Close the window","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create an application instance","Create a new operating system window","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Signify if this app wants to be dpi aware","","Returns an empty set of flags.","Returns an empty set of flags.","Enumerate all display monitors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Return the dpi scale for the current monitor the window is …","Gets window events tracked from os update, to handle …","Get os system virtual key code from Key","Returns an array of bools containing 0-256 keys down …","Retuns the mouse button states, up or down","Return mouse position in relative coordinates from the top …","Retuns the mouse horizontal wheel positions","Retuns the mouse in screen coordinates","Retuns the mouse vertical wheel position","Gets the internal native handle","Returns the screen position for the top-left corner of the …","Returns the screen position for the top-left corner of the …","Returns a vector of utf-16 characters that have been input …","Returns a gfx friendly full window rect to use as …","","","Height of the window starting at y","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns true if the window is focused","Returns true if the window is minimised","Returns true if the mouse if hovering this window","Returns true if the sys key is down and false if the key …","Name of the application","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Specify the number of buffers in the swap chain","Specify a parent handle for child windows (optional)","","","","","Specify the position and size of the window","Removes the specified flags in-place.","Removes the specified flags in-place.","Call to update windows and os state each frame, when false …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the mouse cursor","Sets focus to this window","Set window position in screen space","Set window size in screen coordinates","Set the window display title that appears on the title bar","Show window, specify true to show window or false to hide","Specify window styles","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Title appears in the title bar of the window","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Must be called each frame to handle resizes","Change the windows style","Width of the window starting at x","Implements this interface for windows win32 platfrom","Set to true to create a default window","Top left position x","x position","Top left position y","y position","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,2,3,4,5,6,6,6,7,8,1,9,0,10,0,0,11,0,12,0,0,11,6,0,0,0,12,0,13,4,0,12,0,14,15,6,6,0,0,8,8,8,8,16,17,18,19,19,20,21,0,21,0,0,0,18,0,0,0,18,10,10,5,6,0,0,0,0,13,4,9,1,5,5,0,12,0,0,19,19,15,21,0,0,10,10,10,10,10,10,10,19,6,19,5,5,22,22,22,22,7,0,18,0,2,18,2,11,11,16,23,17,6,5,6,9,6,5,18,10,6,6,6,22,24,24,7,22,21,0,8,8,8,8,8,8,8,23,1,17,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,12,0,18,12,0,0,12,0,20,21,0,19,0,2,17,16,14,20,0,0,0,0,6,0,20,12,18,0,0,0,14,21,0,0,0,25,10,10,10,10,10,0,0,2,0,12,0,0,12,26,26,26,0,0,0,0,0,22,22,22,22,17,22,8,0,14,21,17,15,13,4,21,0,18,23,18,25,11,0,6,3,19,10,27,28,29,29,29,0,0,30,16,1,23,17,31,32,33,12,34,12,34,0,35,27,36,37,37,38,39,16,1,23,17,16,1,23,17,16,1,23,17,16,1,23,17,16,1,23,17,16,1,23,17,16,1,23,17,40,41,40,40,0,29,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,58,53,45,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,37,16,1,23,17,29,46,16,1,23,17,32,16,1,23,17,59,12,12,12,12,12,12,12,12,12,12,50,32,0,56,60,35,35,28,39,32,36,31,40,54,29,51,33,32,32,32,36,49,36,52,28,41,36,35,41,50,16,1,23,17,52,37,37,37,52,40,40,16,1,23,17,37,37,47,20,16,1,23,4,17,42,12,16,1,23,17,49,32,29,47,42,35,18,16,16,16,16,16,1,1,1,1,1,23,23,23,23,23,17,17,17,17,17,32,45,30,56,59,33,42,42,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,57,58,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,16,1,23,17,16,1,23,17,16,1,23,17,16,1,23,17,32,36,41,49,27,12,34,37,34,34,34,34,12,12,61,62,61,62,16,1,23,4,17,44,57,33,31,30,33,41,30,30,16,1,23,17,16,1,23,17,16,1,23,17,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,16,1,23,17,63,16,1,23,17,58,40,40,61,63,29,57,29,57,29,33,29,42,32,35,16,1,23,17,34,16,1,23,17,45,44,38,59,48,16,1,23,17,41,49,41,37,39,27,41,37,54,54,38,48,29,16,1,23,17,31,28,52,37,52,58,56,0,52,33,30,16,1,23,17,37,37,37,37,37,37,37,37,37,28,38,48,29,46,35,56,0,0,56,0,32,40,40,53,53,39,51,36,36,36,30,59,16,1,23,17,16,1,23,17,54,55,34,16,1,23,17,47,33,53,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,35,16,1,23,17,58,41,37,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,42,43,28,35,44,45,46,47,39,38,14,48,30,24,41,32,25,9,36,3,49,19,31,40,10,2,6,50,51,52,53,54,55,56,18,57,58,8,20,59,15,13,16,1,23,4,29,7,11,5,22,33,26,17,27,21,16,1,23,17,61,63,34,61,59,33,38,48,29,41,34,57,33,55,40,55,43,57,43,57,43,0,0,0,0,0,0,0,0,0,0,0,64,65,64,65,66,66,64,67,68,69,65,70,66,71,72,73,74,64,67,68,69,65,70,66,71,72,73,74,65,70,66,71,72,73,74,65,70,66,71,72,73,74,66,64,64,64,64,64,64,64,64,64,64,68,66,66,66,66,66,64,73,64,67,68,69,65,70,66,71,72,73,74,64,65,66,65,65,65,65,64,64,71,72,71,72,64,67,68,69,65,70,66,71,72,73,74,73,71,73,65,66,66,66,73,73,66,66,66,66,66,66,66,66,66,73,73,65,65,70,66,71,72,73,74,66,64,67,68,69,65,70,66,71,72,73,74,64,67,68,69,65,70,66,71,72,73,74,64,67,68,69,65,70,66,71,72,73,74,71,73,65,71,65,0,75,75,75,75,75,75,75,0,75,75,75,75,0,0,0,0,0,0,76,77,76,77,77,77,76,77,76,76,77,76,77,76,77,77,76,76,77,76,77,76,77,78,79,0,0,80,81,82,83,79,0,81,81,81,81,81,80,81,78,81,0,81,83,81,82,83,0,0,78,82,0,84,80,80,78,78,81,81,0,0,80,80,80,80,80,83,81,82,79,0,81,0,78,78,81,80,81,78,0,84,0,0,0,83,83,78,82,85,85,78,82,78,82,78,82,78,82,78,82,78,82,78,82,86,83,79,81,80,87,88,89,78,82,90,86,83,79,81,80,87,88,89,78,82,90,85,85,87,87,88,89,78,82,90,87,88,89,78,82,90,85,78,82,78,82,78,82,84,84,89,89,89,78,82,86,87,78,82,84,80,78,82,78,82,78,78,78,78,78,82,82,82,82,82,86,83,79,81,80,87,88,89,89,78,78,82,90,78,82,78,82,78,82,78,82,85,85,84,84,84,85,84,84,84,85,85,85,84,85,78,82,88,78,82,78,82,78,82,86,83,79,81,80,87,88,89,78,82,90,78,82,78,82,85,85,85,84,86,78,82,78,82,86,90,78,82,87,87,90,78,82,84,78,82,84,85,85,85,85,85,90,78,82,78,82,78,82,90,87,88,89,78,82,90,78,82,86,83,79,81,80,87,88,89,78,82,90,86,83,79,81,80,87,88,89,78,82,90,86,83,79,81,80,87,88,89,78,82,90,78,82,85,85,88,0,86,88,89,88,89,0,0,0,91,91,92,91,93,92,91,93,91,91,92,91,93,92,91,93,91,92,92,92,91,92,92,91,93,91,91,91,92,92,92,91,92,92,92,91,91,91,92,91,92,91,93,91,91,91,92,92,92,91,91,91,91,91,92,91,93,92,91,93,92,91,93,92,91,93,91,91],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],null,[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,[[["str",15],["u32",15]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["shadercompileflags",3]]],[[["writemask",3]]],[[["cpuaccessflags",3]]],[[["textureusage",3]]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["format",4]],["u32",15]],nullnull,null,null,[[],["viewport",3]],[[],["scissorrect",3]],[[],["format",4]],[[],["heaptype",4]],[[],["bufferinfo",3]],[[],["bufferusage",4]],[[],["shadertype",4]],[[],["shadercompileflags",3]],[[],["writemask",3]],[[],["cpuaccessflags",3]],[[],["shadervisibility",4]],[[],["samplerinfo",3]],[[],["samplerfilter",4]],[[],["sampleraddressmode",4]],[[],["comparisonfunc",4]],[[],["topology",4]],[[],["textureinfo",3]],[[],["texturetype",4]],[[],["textureusage",3]],[[],["clearcolour",3]],[[],["resourcestate",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["shadercompileflags",3]],["ordering",4]],[[["writemask",3]],["ordering",4]],[[["cpuaccessflags",3]],["ordering",4]],[[["textureusage",3]],["ordering",4]],null,null,[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["deviceinfo",3]]],[[["option",4],["bufferinfo",3]],[["result",4,["error"]],["error",3]]],[[["u32",15]]],[[["computepipelineinfo",3]],[["error",3],["result",4,["error"]]]],[[["heapinfo",3]]],[[["renderpassinfo",3]],[["error",3],["result",4,["error"]]]],[[["renderpipelineinfo",3]],[["error",3],["result",4,["error"]]]],[[["shaderinfo",3]],[["error",3],["result",4,["error"]]]],[[["window",3],["swapchaininfo",3]]],[[["option",4],["textureinfo",3]],[["error",3],["result",4,["error"]]]],null,null,null,null,[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[["size3",3]]],[[["i32",15],["u32",15]]],[[["u32",15]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["heaptype",4]],["bool",15]],[[["shadercompileflags",3]],["bool",15]],[[["writemask",3]],["bool",15]],[[["cpuaccessflags",3]],["bool",15]],[[["shadervisibility",4]],["bool",15]],[[["textureusage",3]],["bool",15]],null,[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null,null,null,[[["nulerror",3]],["error",3]],[[]],[[["error",3]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15],["rect",3,["i32"]]],["viewport",3]],[[["i32",15],["rect",3,["i32"]]],["scissorrect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u8",15]],["option",4]],[[["u8",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u8",15]]],[[["u8",15]]],[[["u32",15]]],[[["u32",15]]],[[["u8",15]]],[[["u8",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,null,[[],["adapterinfo",3]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["mapinfo",3]]],[[["mapinfo",3]],[["readbackdata",3],["error",3],["result",4,["readbackdata","error"]]]],null,null,null,null,null,null,null,null,null,null,[[["shadercompileflags",3]],["bool",15]],[[["writemask",3]],["bool",15]],[[["cpuaccessflags",3]],["bool",15]],[[["textureusage",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["shadercompileflags",3]],[["ordering",4],["option",4,["ordering"]]]],[[["writemask",3]],[["ordering",4],["option",4,["ordering"]]]],[[["cpuaccessflags",3]],[["ordering",4],["option",4,["ordering"]]]],[[["textureusage",3]],[["ordering",4],["option",4,["ordering"]]]],null,null,null,[[["u32",15]]],null,null,null,[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[]],null,null,null,[[["u64",15],["format",4]],["u64",15]],null,null,null,[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["u32",15]]],[[]],[[]],[[["str",15],["u32",15]]],[[["usize",15],["u32",15]]],[[]],[[["scissorrect",3]]],[[["u32",15]]],[[["viewport",3]]],null,null,null,null,null,null,null,[[["u64",15],["u32",15],["format",4]],["u64",15]],[[]],null,[[["u64",15],["format",4]],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[]],[[]],null,null,[[["transitionbarrier",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["unmapinfo",3]]],[[]],[[["window",3]]],[[["isize",15]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["str",15],["u32",15]]],[[["renderpass",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["swapchain",3]],[[],["renderpipeline",3]],[[],["cmdbuf",3]],[[],["buffer",3]],[[],["texture",3]],[[],["readbackrequest",3]],[[],["renderpass",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["swapchain",3]]],[[["deviceinfo",3]],["device",3]],[[["option",4],["bufferinfo",3]],[["result",4,["buffer","error"]],["error",3],["buffer",3]]],[[["u32",15]],["cmdbuf",3]],[[["computepipelineinfo",3]],[["error",3],["computepipeline",3],["result",4,["computepipeline","error"]]]],[[["heapinfo",3]],["heap",3]],[[["renderpassinfo",3]],[["result",4,["renderpass","error"]],["renderpass",3],["error",3]]],[[["renderpipelineinfo",3]],[["result",4,["renderpipeline","error"]],["renderpipeline",3],["error",3]]],[[["shaderinfo",3]],[["error",3],["result",4,["shader","error"]],["shader",3]]],[[["window",3],["swapchaininfo",3]],["swapchain",3]],[[["option",4],["textureinfo",3]],[["texture",3],["error",3],["result",4,["texture","error"]]]],[[["usize",15]]],[[["size3",3]]],[[["i32",15],["u32",15]]],[[["u32",15]]],[[]],[[]],[[["cmdbuf",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["adapterinfo",3]],[[],["u32",15]],[[],["u32",15]],[[],["renderpass",3]],[[],["renderpass",3]],[[],["texture",3]],[[],["u32",15]],[[]],[[]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["swapchain",3]],["bool",15]],[[["mapinfo",3]]],[[["mapinfo",3]],[["error",3],["result",4,["readbackdata","error"]],["readbackdata",3]]],[[]],[[["u32",15]]],[[["swapchain",3]],["readbackrequest",3]],[[["swapchain",3]]],null,null,[[["heap",3],["u32",15]]],[[["computepipeline",3]]],[[["buffer",3]]],[[["str",15],["u32",15]]],[[["heap",3],["usize",15],["u32",15]]],[[["renderpipeline",3]]],[[["scissorrect",3]]],[[["u32",15],["buffer",3]]],[[["viewport",3]]],null,null,[[["device",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transitionbarrier",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["unmapinfo",3]]],[[]],[[["cmdbuf",3],["window",3],["device",3]]],[[["isize",15]],[["result",4,["error"]],["error",3]]],[[]],null,[[]],[[]],null,null,[[]],null,[[]],[[["string",3]],["imagedata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["u64",15],["u32",15],["string",3]],[["string",3],["result",4,["string"]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["imguiinfo",3]],[["error",3],["result",4,["error"]]]],[[]],null,[[]],null,[[]],[[]],[[]],[[]],null,[[["window",3],["device",3],["app",3]]],[[["cmdbuf",3],["window",3],["device",3],["app",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowstyleflags",3]]],[[["windoweventflags",3]]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["monitorinfo",3]],[[],["rect",3]],[[],["point",3]],[[],["windowstyleflags",3]],[[],["windoweventflags",3]],[[],["windowinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowstyleflags",3]],["ordering",4]],[[["windoweventflags",3]],["ordering",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["appinfo",3]]],[[["windowinfo",3]]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],[["monitorinfo",3],["vec",3,["monitorinfo"]]]],[[["cursor",4]],["bool",15]],[[["windowstyleflags",3]],["bool",15]],[[["windoweventflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["imvec2",3]],[["i32",15],["point",3,["i32"]]]],[[]],[[["imguiviewportflags",6]],["windowstyleflags",3]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["f32",15]],[[],["windoweventflags",3]],[[["key",4]],["i32",15]],[[]],[[]],[[["point",3,["i32"]],["i32",15]],[["point",3,["i32"]],["i32",15]]],[[],["f32",15]],[[],[["point",3,["i32"]],["i32",15]]],[[],["f32",15]],[[]],[[],[["point",3,["i32"]],["i32",15]]],[[],[["size",6,["i32"]],["i32",15]]],[[],[["u16",15],["vec",3,["u16"]]]],[[],[["rect",3,["i32"]],["i32",15]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["syskey",4]],["bool",15]],null,[[["windowstyleflags",3]],["bool",15]],[[["windoweventflags",3]],["bool",15]],[[]],[[]],null,null,[[["windowstyleflags",3]],[["ordering",4],["option",4,["ordering"]]]],[[["windoweventflags",3]],[["ordering",4],["option",4,["ordering"]]]],null,null,null,[[]],[[]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[["cursor",4]]],[[]],[[["point",3,["i32"]],["i32",15]]],[[["size",6,["i32"]],["i32",15]]],[[["string",3]]],[[["bool",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["rect",3,["i32"]],["i32",15],["windowstyleflags",3]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["window",3]],[[],["nativehandle",3]],[[]],[[]],[[]],[[]],[[["appinfo",3]]],[[["windowinfo",3]],["window",3]],[[]],[[]],[[],[["vec",3,["monitorinfo"]],["monitorinfo",3]]],[[]],[[]],[[]],[[],["f32",15]],[[],["windoweventflags",3]],[[],["hwnd",3]],[[["key",4]],["i32",15]],[[]],[[]],[[["i32",15],["point",3,["i32"]]],[["i32",15],["point",3,["i32"]]]],[[],["f32",15]],[[],[["i32",15],["point",3,["i32"]]]],[[],["f32",15]],[[],["nativehandle",3]],[[],[["i32",15],["point",3,["i32"]]]],[[],[["size",6,["i32"]],["i32",15]]],[[],[["u16",15],["vec",3,["u16"]]]],[[],[["i32",15],["rect",3,["i32"]]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["syskey",4]],["bool",15]],[[],["bool",15]],[[["cursor",4]]],[[]],[[["i32",15],["point",3,["i32"]]]],[[["i32",15],["point",3,["i32"]]]],[[["string",3]]],[[["bool",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["i32",15],["windowstyleflags",3],["rect",3,["i32"]]]]],"p":[[3,"WriteMask"],[4,"BlendOp"],[4,"DepthWriteMask"],[4,"ShaderVisibility"],[4,"ComparisonFunc"],[4,"LogicOp"],[4,"SamplerFilter"],[4,"Format"],[4,"CullMode"],[4,"BlendFactor"],[4,"SamplerAddressMode"],[8,"Device"],[4,"ShaderType"],[4,"DescriptorType"],[4,"BufferUsage"],[3,"ShaderCompileFlags"],[3,"TextureUsage"],[4,"ErrorType"],[4,"StencilOp"],[4,"HeapType"],[4,"ResourceState"],[4,"Topology"],[3,"CpuAccessFlags"],[4,"InputSlotClass"],[4,"FillMode"],[4,"TextureType"],[3,"ClearColour"],[3,"DeviceInfo"],[3,"SamplerInfo"],[3,"InputElementInfo"],[3,"BlendInfo"],[3,"RasterInfo"],[3,"TextureInfo"],[8,"SwapChain"],[3,"AdapterInfo"],[3,"DepthStencilInfo"],[8,"CmdBuf"],[3,"DescriptorBinding"],[3,"DescriptorLayout"],[3,"RenderTargetBlendInfo"],[3,"RenderPipelineInfo"],[3,"Error"],[3,"Size3"],[3,"HeapInfo"],[3,"SwapChainInfo"],[3,"ShaderInfo"],[3,"ShaderCompileInfo"],[3,"PushConstantInfo"],[3,"StencilInfo"],[3,"ComputePipelineInfo"],[3,"ClearDepthStencil"],[3,"RenderPassInfo"],[3,"TransitionBarrier"],[3,"MapInfo"],[3,"UnmapInfo"],[3,"ReadBackData"],[3,"Viewport"],[3,"ScissorRect"],[3,"BufferInfo"],[8,"Heap"],[8,"Buffer"],[8,"Texture"],[8,"ReadBackRequest"],[3,"Device"],[3,"SwapChain"],[3,"CmdBuf"],[3,"Shader"],[3,"Heap"],[3,"ComputePipeline"],[3,"RenderPipeline"],[3,"Buffer"],[3,"Texture"],[3,"ReadBackRequest"],[3,"RenderPass"],[3,"ImageData"],[3,"ImGuiInfo"],[3,"ImGui"],[3,"WindowStyleFlags"],[4,"SysKey"],[4,"Cursor"],[4,"Key"],[3,"WindowEventFlags"],[4,"MouseButton"],[8,"App"],[8,"Window"],[3,"AppInfo"],[3,"MonitorInfo"],[3,"Rect"],[3,"Point"],[3,"WindowInfo"],[3,"Window"],[3,"App"],[3,"NativeHandle"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};